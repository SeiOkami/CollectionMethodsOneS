// @strict-types

#Область ПрограммныйИнтерфейс

// Заполняет в запросе параметры из структуры (берет только те, что есть в запросе, игнорируя лишние свойства).
// 
// Параметры:
//  Запрос - Запрос
//  ИсточникПараметров - Структура
Процедура ЗаполнитьПараметрыЗапроса(Запрос, ИсточникПараметров) Экспорт
	
	Для Каждого ПараметрЗапроса Из Запрос.НайтиПараметры() Цикл
		
		ИмяПараметра = ПараметрЗапроса.Имя;
		ЗначениеПараметра = Неопределено;
		Если ИсточникПараметров.Свойство(ИмяПараметра, ЗначениеПараметра) Тогда
			Запрос.УстановитьПараметр(ИмяПараметра, ЗначениеПараметра);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура добавляет таблицу в менеджер временных таблиц
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Менеджер, в который нужно добавить таблицу
//  ИмяТаблицы				 - Строка - Имя временной таблицы
//  ДанныеТаблицы			 - ТаблицаЗначений - Данные таблицы
//
Процедура ДобавитьТаблицуВМенеджерВременныхТаблиц(МенеджерВременныхТаблиц, ИмяТаблицы, ДанныеТаблицы) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ * ПОМЕСТИТЬ %1 ИЗ &ТЗ КАК ТЗ";
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяТаблицы);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТЗ", ДанныеТаблицы);
	Запрос.Выполнить();
	
КонецПроцедуры

// Отформатированный текст запроса.
// 
// Параметры:
//  ТекстЗапроса - Строка
//  РежимКомпоновкиДанных - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ОтформатированныйТекстЗапроса(ТекстЗапроса, РежимКомпоновкиДанных = Ложь) Экспорт
	
	СхемаЗапроса = Новый СхемаЗапроса();
	СхемаЗапроса.РежимКомпоновкиДанных = РежимКомпоновкиДанных;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

// Возвращает пустую таблицу значений результата запроса на основе его текста
// 
// Параметры:
//  ТекстЗапроса - Строка
// 
// Возвращаемое значение:
//  ТаблицаЗначений
Функция ПустаяТаблицаПоТекстуЗапроса(ТекстЗапроса) Экспорт
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	ПакетыЗапросов = СхемаЗапроса.ПакетЗапросов;
	
	КоличествоПакетов = ПакетыЗапросов.Количество();
	Если КоличествоПакетов > 0 Тогда
		
		//Определяем последний пакет с типом выборки
		ПакетВыборки = Неопределено;
		ТекущийИндекс = КоличествоПакетов - 1;
		Пока ПакетВыборки = Неопределено И ТекущийИндекс >= 0 Цикл
			ТекущийПакет = ПакетыЗапросов.Получить(ТекущийИндекс);
			Если ТипЗнч(ТекущийПакет) = Тип("ЗапросВыбораСхемыЗапроса") Тогда
				ПакетВыборки = ТекущийПакет;
			Иначе
				ТекущийИндекс = ТекущийИндекс - 1;
			КонецЕсли;
		КонецЦикла;
		
		//Перебираем колонки найденного пакета
		Если ПакетВыборки <> Неопределено Тогда
			Для Каждого КолонкаЗапроса Из ПакетВыборки.Колонки Цикл
				Если ТипЗнч(КолонкаЗапроса) = Тип("КолонкаСхемыЗапроса") Тогда
					ТаблицаЗначений.Колонки.Добавить(КолонкаЗапроса.Псевдоним, КолонкаЗапроса.ТипЗначения);
				ИначеЕсли ТипЗнч(КолонкаЗапроса) = Тип("КолонкаВложеннаяТаблицаСхемыЗапроса") Тогда
					// TODO: Нужно доработать. Такая ситуация возникает, когда в запросе указана выборка по типу ИмяТаблицы.ИмяТЧ.(Колонка1, Колонка2) КАК ТЧ
					//	ТаблицаЗначений.Колонки.Добавить(КолонкаЗапроса.Псевдоним, Тип("ТаблицаЗначений"));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаЗначений;

КонецФункции

#КонецОбласти
