// @strict-types

#Область ПрограммныйИнтерфейс

// Заполняет в запросе параметры из структуры (берет только те, что есть в запросе, игнорируя лишние свойства).
// 
// Параметры:
//  Запрос - Запрос
//  ИсточникПараметров - Структура
Процедура ЗаполнитьПараметрыЗапроса(Запрос, ИсточникПараметров) Экспорт
	
	Для Каждого ПараметрЗапроса Из Запрос.НайтиПараметры() Цикл
		
		ИмяПараметра = ПараметрЗапроса.Имя;
		ЗначениеПараметра = Неопределено;
		Если ИсточникПараметров.Свойство(ИмяПараметра, ЗначениеПараметра) Тогда
			Запрос.УстановитьПараметр(ИмяПараметра, ЗначениеПараметра);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура добавляет таблицу в менеджер временных таблиц
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Менеджер, в который нужно добавить таблицу
//  ИмяТаблицы				 - Строка - Имя временной таблицы
//  ДанныеТаблицы			 - ТаблицаЗначений - Данные таблицы
//
Процедура ДобавитьТаблицуВМенеджерВременныхТаблиц(МенеджерВременныхТаблиц, ИмяТаблицы, ДанныеТаблицы) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ * ПОМЕСТИТЬ %1 ИЗ &ТЗ КАК ТЗ";
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяТаблицы);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТЗ", ДанныеТаблицы);
	Запрос.Выполнить();
	
КонецПроцедуры

// Отформатированный текст запроса.
// 
// Параметры:
//  ТекстЗапроса - Строка
//  РежимКомпоновкиДанных - Булево
// 
// Возвращаемое значение:
//  Строка
Функция ОтформатированныйТекстЗапроса(ТекстЗапроса, РежимКомпоновкиДанных = Ложь) Экспорт
	
	СхемаЗапроса = Новый СхемаЗапроса();
	СхемаЗапроса.РежимКомпоновкиДанных = РежимКомпоновкиДанных;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

#КонецОбласти
