// @strict-types

#Область ПрограммныйИнтерфейс

// Сворачивает табличную часть по всем колонкам. 
// Числовые колонки при этом суммируются
//
// Параметры:
//  ТабличнаяЧасть - ТабличнаяЧасть
//
Процедура СвернутьТабличнуюЧасть(ТабличнаяЧасть) Экспорт
	
	Ресурсы = Новый Массив; // Массив из Строка
	Измерения = Новый Массив; // Массив из Строка
	
	МетаданныеТабличнойЧасти = Метаданные.НайтиПоТипу(ТипЗнч(ТабличнаяЧасть)); // ОбъектМетаданныхТабличнаяЧасть
	Для Каждого МетаданныеКолонки Из МетаданныеТабличнойЧасти.Реквизиты Цикл
		ИмяКолонки = МетаданныеКолонки.Имя;
		Если МетаданныеКолонки.Тип.СодержитТип(Тип("Число")) Тогда
			Ресурсы.Добавить(ИмяКолонки);
		Иначе
			Измерения.Добавить(ИмяКолонки);
		КонецЕсли;
	КонецЦикла;
	
	ИменаИзмерений = СтрСоединить(Измерения, ",");
	ИменаРесурсов = СтрСоединить(Ресурсы, ",");
	
	ТабличнаяЧасть.Свернуть(ИменаИзмерений, ИменаРесурсов);
	
КонецПроцедуры

// Функция возвращает копию переданной таблицы значений, но исключая из всех колонок тип Null
// Бывает полезна для обработки выгрузки запроса, в котором у каждой колонки есть тип Null
//
// Параметры:
//  ТаблицаЗначений - ТаблицаЗначений
//
// Возвращаемое значение:
//   ТаблицаЗначений - Таблица без Null
//
Функция ТаблицаЗначенийБезNull(ТаблицаЗначений) Экспорт
	
	НоваяТаблица = Новый ТаблицаЗначений;
	Для Каждого ТекущаяКолонка Из ТаблицаЗначений.Колонки Цикл
		ОписаниеТипа = Новый ОписаниеТипов(ТекущаяКолонка.ТипЗначения, , "NULL");
        НоваяТаблица.Колонки.Добавить(ТекущаяКолонка.Имя, ОписаниеТипа,
			ТекущаяКолонка.Заголовок, ТекущаяКолонка.Ширина);
    КонецЦикла;
	
	Для Каждого ТекущаяСтрока Из ТаблицаЗначений Цикл
        ЗаполнитьЗначенияСвойств(НоваяТаблица.Добавить(), ТекущаяСтрока);
    КонецЦикла;
    
    Возврат НоваяТаблица;

КонецФункции

#КонецОбласти
