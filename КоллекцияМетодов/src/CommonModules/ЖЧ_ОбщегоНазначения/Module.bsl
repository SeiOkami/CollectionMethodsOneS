// @strict-types

#Область ПрограммныйИнтерфейс

// Устанавливает свойство объекта по его полному пути (с учетом подчиненных свойств).
// Источник: https://github.com/SeiOkami/CollectionMethodsOneS/issues/142
// 
// Параметры:
//  Объект - Произвольный - Любой объект, который имеет какие-то свойства
//  ПутьКСвойству - Строка - Полный путь к свойству
//  Значение - Произвольный - Устанавливаемое значение
//  
// Пример:
//	УстановитьСвойствоОбъекта(Объект, "Свойство.ПодчиненноеСвойство.ЕщеПодчиненное", Значение); 
//  
Процедура УстановитьСвойствоОбъекта(Знач Объект, Знач ПутьКСвойству, Знач Значение) Экспорт
	
	ЧастиПути = СтрРазделить(ПутьКСвойству, ".");
	ИндексГраницы = ЧастиПути.ВГраница();
	ТекущийОбъект = Объект;
	
	Для Индекс = 0 По ИндексГраницы - 1 Цикл
		ТекущийОбъект = ТекущийОбъект[ЧастиПути[Индекс]]; //Произвольный
	КонецЦикла;
	
	ТекущийОбъект[ЧастиПути[ИндексГраницы]] = Значение;
	
КонецПроцедуры

// Возвращает значение свойства объекта по его полному имени (с учетом подчиненных свойств) или значение по умолчанию.
// 
// Источник: 
//  https://github.com/SeiOkami/CollectionMethodsOneS/issues/144
//  
// Зависимости:
//  https://github.com/SeiOkami/CollectionMethodsOneS/issues/145
//   
// Параметры:
//  Объект - см. ЕстьСвойствоОбъекта.Объект
//  ПутьКСвойству - см. ЕстьСвойствоОбъекта.ПутьКСвойству
//  ЗначениеПоУмолчанию - Произвольный
// 
// Возвращаемое значение:
//  Произвольный
//  
// Пример:
//  ЗначениеСвойстваОбъекта(Неопределено, "Свойство", 1); // 1
//  ЗначениеСвойстваОбъекта(Новый Запрос("ВЫБРАТЬ 1"), "Текст"); // "ВЫБРАТЬ 1"
//  
Функция ЗначениеСвойстваОбъекта(Знач Объект, Знач ПутьКСвойству, Знач ЗначениеПоУмолчанию) Экспорт
	
	Значение = ЗначениеПоУмолчанию;
	ЕстьСвойствоОбъекта(Объект, ПутьКСвойству, Значение);
	Возврат Значение; 
	
КонецФункции

// Проверяет наличие свойства объекта по его полному пути (с учетом подчиненных свойств) и записывает в переменную значение.
// 
// Источник: 
//  https://github.com/SeiOkami/CollectionMethodsOneS/issues/144
//  
// Зависимости:
//  https://github.com/SeiOkami/CollectionMethodsOneS/issues/145
// 
// Параметры:
//  Объект - Произвольный - Любой объект
//  ПутьКСвойству - Строка - Полный путь к свойству
//  Значение - Произвольный - Исходящая переменная, в которую записывается значение при наличии свойства
// 
// Возвращаемое значение:
//  Булево
//  
// Пример:
//  
//  ЕстьСвойствоОбъекта(Новый Запрос, "Текст") // Истина
//  
//  Значение = Неопределено;
//  Структура = Новый Структура("Свойство1", Новый Структура("Свойство2", 69));
//  Если ЕстьСвойствоОбъекта(Структура, "Свойство1.Свойство2", Значение) Тогда
//    Сообщить(Значение); // 69
//  КонецЕсли;
//  
Функция ЕстьСвойствоОбъекта(Знач Объект, Знач ПутьКСвойству, Значение) Экспорт
	
	Если ЖЧ_РаботаСТипами.ЭтоТипБезСвойств(ТипЗнч(Объект)) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	ЧастиПути = СтрРазделить(ПутьКСвойству, ".");
	ИндексГраницы = ЧастиПути.ВГраница();
	ТекущийОбъект = Объект;
	ВременноеЗначение = Новый УникальныйИдентификатор();
	
	Для Индекс = 0 По ИндексГраницы Цикл
		
		ЧастьПути = ЧастиПути[Индекс];

		ВременнаяСтруктура = Новый Структура(ЧастьПути, ВременноеЗначение);
		ЗаполнитьЗначенияСвойств(ВременнаяСтруктура, ТекущийОбъект);
		
		ПолученноеЗначение = ВременнаяСтруктура[ЧастьПути]; // Произвольный
		Если ПолученноеЗначение = ВременноеЗначение Тогда
			Возврат Ложь;
		Иначе
			ТекущийОбъект = ПолученноеЗначение;
			Если Индекс = ИндексГраницы Тогда
				Значение = ТекущийОбъект;
				Возврат Истина;
			ИначеЕсли ЖЧ_РаботаСТипами.ЭтоТипБезСвойств(ТипЗнч(Объект)) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

#КонецОбласти
