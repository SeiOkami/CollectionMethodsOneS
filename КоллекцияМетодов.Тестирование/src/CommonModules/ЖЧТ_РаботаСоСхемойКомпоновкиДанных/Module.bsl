
#Область СлужебныйПрограммныйИнтерфейс

// Регистрация тестов
Процедура ИсполняемыеСценарии() Экспорт

	Перем ЮТТесты;
	ЮТТесты = ЖЧТ_Движок.ЮТТесты();
	
	ЮТТесты
		.ДобавитьТестовыйНабор("УстановитьКоличествоПолучаемыхЗаписейНабораДанных")
			.ДобавитьТест("Тест_УстановитьКоличествоПолучаемыхЗаписейНабораДанных_Успешно")
	;

КонецПроцедуры

#Область Тесты

#Область УстановитьКоличествоПолучаемыхЗаписейНабораДанных

Процедура Тест_УстановитьКоличествоПолучаемыхЗаписейНабораДанных_Успешно() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	ТекстЗапроса = "ВЫБРАТЬ 1 КАК Поле ПОМЕСТИТЬ ВТ; ВЫБРАТЬ Поле ИЗ ВТ";
	СхемаЗапроса = Новый СхемаЗапроса();
	СхемаЗапроса.РежимКомпоновкиДанных = Истина;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	СКД = Новый СхемаКомпоновкиДанных();
	НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Запрос = ТекстЗапроса;
	
	ТестируемыйМодуль.УстановитьКоличествоПолучаемыхЗаписейНабораДанных(НаборДанных, 9);
	
	ЮТест.ОжидаетЧто(НаборДанных.Запрос)
		.Равно("ВЫБРАТЬ 1 КАК Поле ПОМЕСТИТЬ ВТ; ВЫБРАТЬ ПЕРВЫЕ 9 Поле ИЗ ВТ");
	
КонецПроцедуры

#КонецОбласти

#Область ДобавитьТаблицуВМенеджерВременныхТаблиц

Процедура Тест_ДобавитьТаблицуВМенеджерВременныхТаблиц() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	МВТ = Новый МенеджерВременныхТаблиц();
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить("К1", Новый ОписаниеТипов("Число"));
	ТЗ.Колонки.Добавить("К2", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("К3", Новый ОписаниеТипов("Дата"));
	
	ИмяТаблицы = "Тест";
	ТестируемыйМодуль.ДобавитьТаблицуВМенеджерВременныхТаблиц(МВТ, "Тест", ТЗ);
	
	ВТ = МВТ.Таблицы.Найти("Тест");
	ЮТест.ОжидаетЧто(ВТ).ИмеетТип(Тип("ВременнаяТаблицаЗапроса"))
		.Свойство("ПолноеИмя").Равно(ИмяТаблицы)
		.Свойство("Колонки").ИмеетДлину(ТЗ.Колонки.Количество());
	
	Для Каждого Колонка Из ВТ.Колонки Цикл
		ЮТест.ОжидаетЧто(Колонка.ТипЗначения).Равно(ТЗ.Колонки[Колонка.Имя].ТипЗначения);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Тестируемый модуль.
// 
// Возвращаемое значение:
//  ОбщийМодуль
Функция ТестируемыйМодуль() Экспорт

	Возврат ЖЧТ_Модули.РаботаСоСхемойКомпоновкиДанных();
	
КонецФункции

#КонецОбласти
