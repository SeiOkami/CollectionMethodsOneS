
#Область СлужебныйПрограммныйИнтерфейс

// Регистрация тестов
Процедура ИсполняемыеСценарии() Экспорт

	Перем ЮТТесты;
	ЮТТесты = ЖЧТ_Движок.ЮТТесты();
	
	ЮТТесты
		.ДобавитьТестовыйНабор("СвернутьТабличнуюЧасть")
			.ДобавитьТест("Тест_СвернутьТабличнуюЧасть_БезРесурсов")
			.ДобавитьТест("Тест_СвернутьТабличнуюЧасть_ОдинРесурс")
			.ДобавитьТест("Тест_СвернутьТабличнуюЧасть_НесколькоРесурсов")
			.ДобавитьТест("Тест_СвернутьТабличнуюЧасть_БезИзмерений")
		.ДобавитьТестовыйНабор("ТаблицаЗначенийБезNull")
			.ДобавитьТест("Тест_ТаблицаЗначенийБезNull")
		.ДобавитьТестовыйНабор("ОбновленнаяКолонкаТаблицы")
			.ДобавитьТест("Тест_ОбновленнаяКолонкаТаблицы_Создание")
			.ДобавитьТест("Тест_ОбновленнаяКолонкаТаблицы_Обновление")
			.ДобавитьТест("Тест_ОбновленнаяКолонкаТаблицы_ОбновлениеКромеТипа")
		.ДобавитьТестовыйНабор("ТаблицаЗначенийСПлохойКолонкой")
			.ДобавитьТест("Тест_ТаблицаЗначенийСПлохойКолонкой", 
				"Создание новой таблицы с плохой колонкой").СПараметрами(Истина)
			.ДобавитьТест("Тест_ТаблицаЗначенийСПлохойКолонкой", 
				"Дополнение существующей таблицы значений плохой колонкой").СПараметрами(Ложь)
	;

КонецПроцедуры

#Область Тесты

#Область СвернутьТабличнуюЧасть

Процедура Тест_СвернутьТабличнуюЧасть_БезРесурсов() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Эталон = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_БезРесурсов;
	Эталон.Добавить();
	
	Параметр = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_БезРесурсов;
	Параметр.Добавить();
	Параметр.Добавить();
	Параметр.Добавить();
	
	ТестируемыйМодуль.СвернутьТабличнуюЧасть(Параметр);
	
	ЮТест.ОжидаетЧто(Параметр.Выгрузить()).Равно(Эталон.Выгрузить());
	
КонецПроцедуры

Процедура Тест_СвернутьТабличнуюЧасть_ОдинРесурс() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Эталон = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_ОдинРесурс;
	
	Строка = Эталон.Добавить();
	Строка.Измерение1 = 1;
	Строка.Ресурс1 = 3;
	
	Строка = Эталон.Добавить();
	Строка.Измерение2 = 1;
	Строка.Ресурс1 = 1;
	
	Параметр = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_ОдинРесурс;
	
	Строка = Параметр.Добавить();
	Строка.Измерение1 = 1;
	Строка.Ресурс1 = 1;
	
	Строка = Параметр.Добавить();
	Строка.Измерение2 = 1;
	Строка.Ресурс1 = 1;
	
	Строка = Параметр.Добавить();
	Строка.Измерение1 = 1;
	Строка.Ресурс1 = 2;
	
	ТестируемыйМодуль.СвернутьТабличнуюЧасть(Параметр);
	
	ЮТест.ОжидаетЧто(Параметр.Выгрузить()).Равно(Эталон.Выгрузить());
	
КонецПроцедуры

Процедура Тест_СвернутьТабличнуюЧасть_НесколькоРесурсов() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Эталон = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_НесколькоРесурсов;
	
	Строка = Эталон.Добавить();
	Строка.Измерение1 = 1;
	Строка.Ресурс1 = 5;
	
	Строка = Эталон.Добавить();
	Строка.Измерение2 = 1;
	Строка.Ресурс2 = 10;
	
	Строка = Эталон.Добавить();
	
	Параметр = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_НесколькоРесурсов;
	
	Строка = Параметр.Добавить();
	Строка.Измерение1 = 1;
	Строка.Ресурс1 = 3;
	
	Строка = Параметр.Добавить();
	Строка.Измерение1 = 1;
	Строка.Ресурс1 = 2;
	
	Строка = Параметр.Добавить();
	Строка.Измерение2 = 1;
	Строка.Ресурс2 = 1;
	
	Строка = Параметр.Добавить();
	Строка.Измерение2 = 1;
	Строка.Ресурс2 = 9;
	
	Строка = Параметр.Добавить();
	
	ТестируемыйМодуль.СвернутьТабличнуюЧасть(Параметр);
	
	ЮТест.ОжидаетЧто(Параметр.Выгрузить()).Равно(Эталон.Выгрузить());
	
КонецПроцедуры

Процедура Тест_СвернутьТабличнуюЧасть_БезИзмерений() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Эталон = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_БезИзмерений;
	Строка = Эталон.Добавить();
	Строка.Ресурс1 = 3;
	Строка.Ресурс2 = 7;
	Строка.Ресурс3 = 11;
	
	Параметр = Обработки.ЖЧТ_ОбработкаТестирования.Создать().СвернутьТабличнуюЧасть_БезИзмерений;
	Параметр.Добавить().Ресурс1 = 1;
	Параметр.Добавить().Ресурс1 = 2;
	Параметр.Добавить().Ресурс2 = 3;
	Параметр.Добавить().Ресурс2 = 4;
	Параметр.Добавить().Ресурс3 = 5;
	Параметр.Добавить().Ресурс3 = 6;
	
	ТестируемыйМодуль.СвернутьТабличнуюЧасть(Параметр);
	
	ЮТест.ОжидаетЧто(Параметр.Выгрузить()).Равно(Эталон.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ТаблицаЗначенийБезNull

Процедура Тест_ТаблицаЗначенийБезNull() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Параметр = Новый ТаблицаЗначений;
	Параметр.Колонки.Добавить("К1", Новый ОписаниеТипов("Строка,Null"));
	Параметр.Колонки.Добавить("К2", Новый ОписаниеТипов("Число,Строка"));
	Параметр.Колонки.Добавить("К3", Новый ОписаниеТипов("Число,Дата,Null"));
	Параметр.Добавить().К1 = "тыц";
	Параметр.Добавить().К2 = "333";
	Параметр.Добавить().К3 = Null;
	
	Эталон = Новый ТаблицаЗначений;
	Эталон.Колонки.Добавить("К1", Новый ОписаниеТипов("Строка"));
	Эталон.Колонки.Добавить("К2", Новый ОписаниеТипов("Число,Строка"));
	Эталон.Колонки.Добавить("К3", Новый ОписаниеТипов("Число,Дата"));
	Эталон.Добавить().К1 = "тыц";
	Эталон.Добавить().К2 = "333";
	Эталон.Добавить().К3 = Неопределено;
	
	Результат = ТестируемыйМодуль.ТаблицаЗначенийБезNull(Параметр);
	
	ЮТест.ОжидаетЧто(Результат).Равно(Эталон);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновленнаяКолонкаТаблицы

Процедура Тест_ОбновленнаяКолонкаТаблицы_Создание() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Ожидания = Новый Структура;
	Ожидания.Вставить("Имя", "К");
	Ожидания.Вставить("ТипЗначения", Новый ОписаниеТипов("Число"));
	Ожидания.Вставить("Заголовок", "Колонка");
	Ожидания.Вставить("Ширина", 69);
	
	Таблица = Новый ТаблицаЗначений();
	Колонка = ТестируемыйМодуль.ОбновленнаяКолонкаТаблицы(Таблица, 
		Ожидания.Имя, Ожидания.ТипЗначения, Ожидания.Заголовок, Ожидания.Ширина);
	
	Тестировщик = ЮТест.ОжидаетЧто(Колонка);
	Для Каждого КлючИЗначение Из Ожидания Цикл
		Тестировщик.Свойство(КлючИЗначение.Ключ).Равно(КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

Процедура Тест_ОбновленнаяКолонкаТаблицы_Обновление() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Ожидания = Новый Структура;
	Ожидания.Вставить("Имя", "К");
	Ожидания.Вставить("ТипЗначения", Новый ОписаниеТипов("Число"));
	Ожидания.Вставить("Заголовок", "Колонка");
	Ожидания.Вставить("Ширина", 69);
	
	Таблица = Новый ТаблицаЗначений();
	Колонка = Таблица.Колонки.Добавить(Ожидания.Имя, Ожидания.ТипЗначения);
	Результат = ТестируемыйМодуль.ОбновленнаяКолонкаТаблицы(Таблица, 
		Ожидания.Имя, Ожидания.ТипЗначения, Ожидания.Заголовок, Ожидания.Ширина);
	
	Тестировщик = ЮТест.ОжидаетЧто(Колонка).Равно(Результат);
	Для Каждого КлючИЗначение Из Ожидания Цикл
		Тестировщик.Свойство(КлючИЗначение.Ключ).Равно(КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

Процедура Тест_ОбновленнаяКолонкаТаблицы_ОбновлениеКромеТипа() Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Ожидания = Новый Структура;
	Ожидания.Вставить("Имя", "К");
	Ожидания.Вставить("СтарыйТипЗначения", Новый ОписаниеТипов("Число"));
	Ожидания.Вставить("НовыйТипЗначения", Новый ОписаниеТипов("Строка"));
	
	Таблица = Новый ТаблицаЗначений();
	Колонка = Таблица.Колонки.Добавить(Ожидания.Имя, Ожидания.СтарыйТипЗначения);
	Результат = ТестируемыйМодуль.ОбновленнаяКолонкаТаблицы(Таблица, Ожидания.Имя, Ожидания.НовыйТипЗначения);
	
	Тестировщик = ЮТест.ОжидаетЧто(Колонка)
		.Равно(Результат)
			.Свойство("ТипЗначения")
			.Равно(Ожидания.СтарыйТипЗначения);

КонецПроцедуры

#КонецОбласти

#Область ТаблицаЗначенийСПлохойКолонкой

Процедура Тест_ТаблицаЗначенийСПлохойКолонкой(НоваяТаблица) Экспорт

	Перем ЮТест;
	ЮТест = ЖЧТ_Движок.ЮТест();

	ТестируемыйМодуль = ТестируемыйМодуль();
	
	Ожидаемые = Новый Структура;
	Ожидаемые.Вставить("Имя", "1");
	Ожидаемые.Вставить("Тип", Новый ОписаниеТипов("Строка"));
	Ожидаемые.Вставить("Заголовок", "Тест");
	
	Если НоваяТаблица Тогда
		Таблица = Новый ТаблицаЗначений();
		Таблица.Колонки.Добавить("К");
	Иначе
		Таблица = Неопределено;
	КонецЕсли;
	
	Результат = ТестируемыйМодуль.ТаблицаЗначенийСПлохойКолонкой(Ожидаемые.Имя, 
		Таблица, Ожидаемые.Тип, Ожидаемые.Заголовок);
	
	Если НоваяТаблица Тогда
		ЮТест.ОжидаетЧто(Результат.Колонки.Количество()).Равно(Таблица.Колонки.Количество());
	КонецЕсли;
	
	Колонка = Результат.Колонки[Ожидаемые.Имя];
	ЮТест.ОжидаетЧто(Колонка)
		.ИмеетТип("КолонкаТаблицыЗначений")
		.Свойство("ТипЗначения").Равно(Ожидаемые.Тип)
		.Свойство("Заголовок").Равно(Ожидаемые.Заголовок)
	;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Тестируемый модуль.
// 
// Возвращаемое значение:
//  ОбщийМодуль
Функция ТестируемыйМодуль() Экспорт

	Возврат ЖЧТ_Модули.РаботаСКоллекциями();
	
КонецФункции

#КонецОбласти
